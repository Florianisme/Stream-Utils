buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'java'
    id "signing"
    id "maven-publish"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group 'de.florianisme'
version = System.getenv("GITHUB_VERSION") ?: "999.0-ManualRelease"
description = "A collection of a few utility methods for dealing with Java Streams"


repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'com.google.guava:guava:31.0.1-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    withJavadocJar()
    withSourcesJar()
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "stream-utils"

            from components.java

            pom {
                name = "Stream Utils"
                description = "A collection of a few utility methods for dealing with Java Streams"
                url = "https://github.com/Florianisme/Stream-Utils"

                licenses {
                    license {
                        name = "MIT License"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id = "Florianisme"
                        name = "Florian MÃ¶hle"
                        email = "florian.m9782@gmail.com"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/Florianisme/Stream-Utils.git"
                    developerConnection = "scm:git:ssh://github.com/Florianisme/Stream-Utils.git"
                    url = "https://github.com/Florianisme/Stream-Utils"
                }
                issueManagement {
                    system = "GitHub"
                    url = "https://github.com/Florianisme/Stream-Utils/issues"
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = project.findProperty("gpr.ossrhUser") ?: System.getenv("OSSRHUSER")
            password = project.findProperty("gpr.ossrhPassword") ?: System.getenv("OSSRHPASSWORD")
        }
    }
}

signing {
    def signingKey = findProperty("signingKey") ?: System.getenv("GPG_PRIVATE_KEY")
    def signingPassword = findProperty("signingPassword") ?: System.getenv("GPG_PASSPHRASE")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
